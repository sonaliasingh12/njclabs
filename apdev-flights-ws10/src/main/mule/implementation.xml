<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-app="http://www.mulesoft.org/schema/mule/american-flights-app" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-app http://www.mulesoft.org/schema/mule/american-flights-app/current/mule-american-flights-app.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getAmericanFlights" doc:id="fbee957a-9c5d-41bf-a080-81f431c7c423" >
		<american-flights-app:get-flights doc:name="Get flights" doc:id="72659022-9b95-4969-a9b8-08f139b78798" config-ref="American_Flights_App_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON TO [Flight]" doc:id="f460cdf1-8402-42a6-a47b-5a55369ccd09" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: "American",
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2186d606-e493-4c9f-8ec3-bfb346f2b76d" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0e4e8a4d-05ce-48c5-b913-a1d611ea6d5a" >
				<ee:transform doc:name="No Flights" doc:id="c3b090a7-607f-4d25-b81a-f2f7ea504e7f" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to" ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="e70240b2-ffff-483b-8b6b-79f2fe5a6223" variableName="httpStatus"/>
			</on-error-continue>
		</error-handler>
	</flow>
	<sub-flow name="setCode" doc:id="b12f28f2-bb34-4f14-bc1a-78e43ef4a588" >
		<set-variable value="#[message.attributes.queryParams.code]" doc:name="Set Variable" doc:id="6c44172d-77c4-4196-8ac2-e0ed9cc87fa5" variableName="code"/>
	</sub-flow>
	<flow name="getUnitedFlights" doc:id="4dab84e6-dc7a-4ea9-b3d6-aab333f4e96f">
		<http:request method="GET" doc:name="Get Flights" doc:id="776e26ef-c902-4fdd-a37d-310b2fb1c023" config-ref="HTTP_Request_config_training" path="/united/flights/{dest}">
			<http:uri-params><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flight]" doc:id="3e1dcdba-ccd4-46cf-ad4a-e354a21e06ea">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3ea679eb-c13d-4a25-bbdc-b2e9aff2c25d" />
	</flow>
	<flow name="getDeltaFlights" doc:id="db7d776a-9cc1-4d04-b175-b061df94735d">
		<ee:transform doc:name="Pass code" doc:id="cf4ffa24-e8ec-49b1-ae36-18332f7ff8b5">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume operation="findFlight" doc:name="Get flights" doc:id="d75b1682-0511-45da-b226-9b62874f9a54" config-ref="Delta_Web_Service_Consumer_Config" />
		<ee:transform doc:name="SOAP to [Flight]" doc:id="a1473701-6c49-452c-a6d3-ca2bc4f9bb82">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="d6d8e2e6-df66-4b92-a956-2f768e70d891" />
	</flow>
	<flow name="getAllAirlineFlights" doc:id="fbcd32eb-4651-4bf3-aaef-287232d5b48e" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="d41ddb8b-f106-4060-ac04-4069a5293a5d" >
			<route >
				<try doc:name="Try" doc:id="10813fed-41d1-433d-baf6-fd8a69aefdc6" >
					<flow-ref doc:name="getAmericanFlights" doc:id="ef279ed9-9eae-4a2a-adaa-becd1edb3843" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="22add5b6-cf2c-42c9-8385-9e2485117862" type="ANY">
							<ee:transform doc:name="[]" doc:id="d1dda547-32bc-468f-9872-8249b9d67ae0" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---

[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="1e54ddf0-14f2-47f7-8649-9ce9e11aae91" >
					<flow-ref doc:name="getUnitedFlights" doc:id="c37dbb54-0cef-4f05-9c03-121a4ceb0bcd" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="d8aea864-dfdb-4e4a-9308-bcdafdc095f0" type="ANY">
							<ee:transform doc:name="[]" doc:id="c8daf2b8-ef38-4443-830d-14668d4ebd86" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---

[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="e268d0e2-8ac5-411d-8579-3fb61a928b9b" >
					<flow-ref doc:name="getDeltaFlights" doc:id="458cad16-5506-41db-bd71-22c2b6a59324" name="getDeltaFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="a8edb1ef-7b28-4ed2-afc4-4cf76d64340b" type="ANY">
							<ee:transform doc:name="[]" doc:id="8ba00c6c-1b9f-43a5-ae59-0b77ca0d9abf" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---

[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flatten to [Flight]" doc:id="55795580-896b-4e71-be59-03061e50dac4" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b6e5841b-c251-40c3-b144-124d79b6fd62" />
	</flow>
	<flow name="getFlights" doc:id="005d03b6-c997-4693-b0ed-3ba669766df8" >
		<set-variable value="#[message.attributes.queryParams.airline]" doc:name="airline" doc:id="690654de-582d-4b68-83d2-9bb1a36099ec" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="28a77097-71fe-4367-a113-7c1774402565" name="setCode"/>
		<validation:is-true doc:name="Is valid destination" doc:id="4fcfd493-00d0-486d-98ab-b5b3b7d6c6c5" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTINATION" />
		</validation:is-true>
		<choice doc:name="Choice" doc:id="cd8ad659-ef3b-4d6d-b0ea-34c8cc0fc4f4" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanFlights" doc:id="782af640-3ad9-45b6-b43b-9ff8bb2c2477" name="getAmericanFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]'>
				<flow-ref doc:name="getUnitedFlights" doc:id="bc2857fd-2ff9-45d4-b897-50e4d91bda14" name="getUnitedFlights"/>
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFights" doc:id="11f10a4d-5838-4a85-8767-5af800376bda" name="getUnitedFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="20a4b6db-ce8d-4728-9d30-e3be1eba8362" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flight] to JSON" doc:id="13ffe967-742a-4ac5-8bec-c65f34edd899">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="47cb6909-0cd7-40e3-8b5d-dfeee0cd3830" />
		
	</flow>
	<flow name="postFlight" doc:id="68539bc1-6fe3-47e6-9752-3f29dc5b4751" >
		<ee:transform doc:name="Transform Message" doc:id="d00f3153-5630-4842-a521-0f15809494ae" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
data:{
	hub: "MUA",
	code:payload.toAirportCode,
	airline: payload.airline
	}]]></ee:set-payload>
				<ee:set-attributes resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
data:{
	hub: "MUA",
	flight @(airline:payload.airline):{
	code:payload.toAirportCode,
	
	}
	
	}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="e03655fb-344a-42b6-a732-3a225a177bc8" message="#[vars.DWoutput]"/>
	</flow>
	<flow name="postMultipleFlights" doc:id="335249a1-4864-4ad9-b521-1213b9f8a91d" >
		<http:listener doc:name="POST/multipleflights" doc:id="cdba1a3b-2fac-454b-9acf-2ec127a2dec8" config-ref="HTTP_Listener_config" path="/multipleflights" allowedMethods="POST"/>
		<ee:transform doc:name="Transform Message" doc:id="ff029072-0ae0-4afa-99f1-4dff2d161d5b" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/dw
import dasherize from dw::core::Strings
//var numSeats = 400
//var numSeats =(x=400)->x
//var numSeats= (planeType:String)->

type Currency = String {format:"###.00"}
type Flight = Object{class:"com.mulesoft.training.Flight"}
	
fun getNumSeats(planeType:String)=
	if(planeType contains('737'))
	150
	else
	300
---
using (flights=
	 payload..*return 
map(object , index)-> {
	destination:object.destination,
	price:object.price as Number as Currency ,
	//totalSeats :getNumSeats(object.planeType as String),
	totalSeats:lookup("getTotalSeats",{planeType:object.planeType}),
	planeType :dasherize(replace(object.planeType,/(Boing)/) with "Boeing"),
	departureDate : object.departureDate as Date{format:"yyyy/MM/dd"} as 
	String {format:"MMM dd, yyyy"},
	availableSeats : object.emptySeats as Number
		} as Object
		)
flights distinctBy $
		filter ($.availableSeats !=0)
		orderBy $.departureDate
		orderBy $.price
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3dec6fcc-4b7e-49b7-a485-7160c5b53ab1" />
	</flow>
	<flow name="getTotalSeats" doc:id="387cb10b-6c38-43bb-aa10-15187ba469e1" >
		<ee:transform doc:name="Transform Message" doc:id="1ed8d0e3-db2e-4748-b24e-c089f63794e0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java

fun getNumSeats(planeType:String)=
	if(planeType contains('737'))
	150
	else
	300
---
getNumSeats(payload.planeType)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
